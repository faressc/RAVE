# GLOBAL VARIABLES
SAMPLING_RATE: 44100
CAPACITY: 64
N_BAND: 16
LATENT_SIZE: 16
RATIOS: [4, 4, 4, 2]
PHASE_1_DURATION: 1000000

# CORE CONFIGURATION
core:
  AudioDistanceV1:
    _target_: rave.core.AudioDistanceV1
    multiscale_stft: ${model.core.MultiScaleSTFT}
    log_epsilon: 1e-7

  MultiScaleSTFT:
    _target_: rave.core.MultiScaleSTFT
    _partial_: True
    scales: [2048, 1024, 512, 256, 128]
    sample_rate: ${model.SAMPLING_RATE}
    magnitude: True

# DATASET CONFIG
dataset:
  split_dataset:
    max_residual: 1000

# CONVOLUTION CONFIGURATION
cc:
  Conv1d:
    _target_: cached_conv.Conv1d
    _partial_: True
    bias: False

  ConvTranspose1d:
    _target_: cached_conv.ConvTranspose1d
    _partial_: True
    bias: False

# PQMF CONFIGURATION
pqmf:
  CachedPQMF:
    _target_: rave.pqmf.CachedPQMF
    attenuation: 100
    n_band: ${model.N_BAND}
    n_channels: ${N_CHANNELS}

# BLOCKS CONFIGURATION
blocks:
  normalization:
    mode: weight_norm

  Encoder: &encoder_defaults
    _target_: rave.blocks.Encoder
    data_size: ${model.N_BAND}
    capacity: ${model.CAPACITY}
    latent_size: ${model.LATENT_SIZE}
    ratios: ${model.RATIOS}
    sample_norm: false
    repeat_layers: 1
    n_channels: ${N_CHANNELS}

  VariationalEncoder:
    _target_: rave.blocks.VariationalEncoder
    encoder:
      _target_: rave.blocks.Encoder
      <<: *encoder_defaults
      n_out: 2

  Generator:
    _target_: rave.blocks.Generator
    latent_size: ${model.LATENT_SIZE}
    capacity: ${model.CAPACITY}
    data_size: ${model.N_BAND}
    ratios: ${model.RATIOS}
    n_channels: ${N_CHANNELS}
    loud_stride: 1
    use_noise: True
    residual_stack: ${model.blocks.ResidualStack}
    noise_generator: ${model.blocks.NoiseGenerator}

  ResidualStack:
    _target_: rave.blocks.ResidualStack
    _partial_: True
    kernel_sizes: [3]
    dilations_list: [[1, 1], [3, 1], [5, 1]]

  NoiseGenerator:
    _target_: rave.blocks.NoiseGenerator
    _partial_: True
    ratios: [4, 4, 4]
    noise_bands: 5

# DISCRIMINATOR CONFIGURATION
discriminator:
  ConvNet: &discriminator_defaults
    _target_: rave.discriminator.ConvNet
    in_size: ${N_CHANNELS}
    out_size: 1
    capacity: ${model.CAPACITY}
    n_layers: 4
    stride: 4

  MultiScaleDiscriminator:
    _target_: rave.discriminator.MultiScaleDiscriminator
    n_discriminators: 3
    convnet: ${model.scales.discriminator.ConvNet}

scales:
  discriminator:
    ConvNet:
      _target_: rave.discriminator.ConvNet
      <<: *discriminator_defaults
      conv:
        _target_: torch.nn.Conv1d
        _partial_: True
      kernel_size: 15

# FEATURE MATCHING CONFIGURATION
feature_matching:
  core:
    mean_difference:
      _target_: rave.core.mean_difference
      _partial_: True
      norm: L1

# MODEL ASSEMBLING
rave:
  RAVE:
    _target_: rave.RAVE
    latent_size: ${model.LATENT_SIZE}
    pqmf: ${model.pqmf.CachedPQMF}
    sampling_rate: ${model.SAMPLING_RATE}
    n_channels: ${N_CHANNELS}
    encoder: ${model.blocks.VariationalEncoder}
    decoder: ${model.blocks.Generator}
    discriminator: ${model.discriminator.MultiScaleDiscriminator}
    phase_1_duration: ${model.PHASE_1_DURATION}
    gan_loss:
      _target_: rave.core.hinge_gan
      _partial_: True
    valid_signal_crop: False
    feature_matching_fun: ${model.feature_matching.core.mean_difference}
    num_skipped_features: 0
    audio_distance: ${model.core.AudioDistanceV1}
    multiband_audio_distance: ${model.core.AudioDistanceV1}
    weights:
      feature_matching: 10

  BetaWarmupCallback:
    _target_: rave.BetaWarmupCallback
    initial_value: 0.1
    target_value: 0.1
    warmup_len: 1
